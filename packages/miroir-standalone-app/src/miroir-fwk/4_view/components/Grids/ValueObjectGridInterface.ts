import { z } from "zod";

import {
  jzodElement,
  jzodObject,
} from "miroir-core";

// ################################################################################################
// Value Object Grid Row structure
export const valueObjectGridRowSchema = z.object({
  localId: z.string(), // Local identifier for row identification
  displayedValue: z.any(),
  rawValue: z.any(), // The value object itself (not necessarily an EntityInstance)
  jzodSchema: z.record(jzodElement),
})

export type ValueObjectGridRow = z.infer<typeof valueObjectGridRowSchema>;

// ################################################################################################
// Value Object Grid Props
export const valueObjectGridPropsSchema = z.object({
  valueObjects: z.array(z.any()), // Array of value objects to display
  jzodSchema: jzodObject, // Schema defining the structure/format
  columnDefs: z.object({ columnDefs: z.array(z.any()) }).optional(), // Optional explicit column definitions
  styles: z.any().optional(),
  theme: z.any().optional(),
  maxRows: z.number().optional(),
  sortByAttribute: z.string().optional(),
  gridType: z.enum(["ag-grid", "glide", "glide-data-grid"]).optional().default("ag-grid"),
  
  // Optional editing capabilities (when EntityInstanceGrid wants to enable editing)
  onRowEdit: z.function().args(z.any()).returns(z.void()).optional(),
  onRowDelete: z.function().args(z.any()).returns(z.void()).optional(),
  onRowDuplicate: z.function().args(z.any()).returns(z.void()).optional(),
  
  // Additional optional props for display
  displayTools: z.boolean().default(false),
  children: z.any().optional(),
});

export type ValueObjectGridProps = z.infer<typeof valueObjectGridPropsSchema>;

// ################################################################################################
// Auto-generated column definition from jzodSchema
export interface AutoGeneratedColumnDef {
  field: string;
  headerName: string;
  type: string; // The jzod type (string, number, object, etc.)
  cellRenderer?: string;
  editable?: boolean;
  sortable?: boolean;
  filter?: boolean;
  width?: number;
  minWidth?: number;
  maxWidth?: number;
}
